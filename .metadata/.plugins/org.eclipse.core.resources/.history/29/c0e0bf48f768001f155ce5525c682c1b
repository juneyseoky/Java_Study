package pkg;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class LogPreparedStatement implements java.sql.PreparedStatement {
    private ArrayList parameterValues;
    private String sqlTemplate;
    private PreparedStatement wrappedStatement;

    //생성자
    public LogPreparedStatement(Connection connection, String sql) throws SQLException {
        wrappedStatement = connection.prepareStatement(sql);
        sqlTemplate = sql;
        parameterValues = new ArrayList();
    }
    
  
    @Override
    public void setString(int parameterIndex, String x) throws SQLException {
        wrappedStatement.setString(parameterIndex, x);
        saveQueryParamValue(parameterIndex, x);
    }
    

    private void saveQueryParamValue(int position, Object obj) {
        String strValue;
        if (obj instanceof String || obj instanceof Date) {
            strValue = "'" + obj + "'";
        } else {
            if (obj == null) {
                strValue = "null";
            } else {
                strValue = obj.toString();
            }
        }
        while (position >= parameterValues.size()) {
            parameterValues.add(null);
        }
        parameterValues.set(position, strValue);
    }

    public String toString() {
		return this.getQueryString();
    }

    public String getQueryString() {
        StringBuffer buf = new StringBuffer();
        int qMarkCount = 0;
        ArrayList chunks = new ArrayList();
        StringTokenizer tok = new StringTokenizer(sqlTemplate + " ", "?");
        while (tok.hasMoreTokens()) {
            String oneChunk = tok.nextToken();
            buf.append(oneChunk);

            try {
                Object value;
                if (parameterValues.size() > 1 + qMarkCount) {
                    value = parameterValues.get(1 + qMarkCount++);
                } else {
                    if (tok.hasMoreTokens()) {
                        value = null;
                    } else {
                        value = "";
                    }
                }
                buf.append("" + value);
            } catch (Throwable e) {
                buf.append("Error : " + e.toString());
            }
        }
        return buf.toString().trim();
    }
}